string $ikFkSwitchCtl = "L_hand_ctl" ;
string $groupForFKIKSwitch = ($ikFkSwitchCtl + "_group");
string $switchingIKHandle = "L_ik_handle_ctl";
string $switchingIKHandleGroup = ($switchingIKHandle + "_group");

string $fkIKAttrName = "FK_IK_Switch" ;
string $fkIKExpName = "L_FK_IK_Switcher" ;
string $fkIKExpVarName = "$L_index" ;
string $fkIKNodeName = ($fkIKAttrName + "_Node") ;
string $fkIKNodeFunc = ($fkIKAttrName + "_Node()") ;
string $fkIKNodeFuncQ = ("\"" + $fkIKAttrName + "_Node()\"") ;
string $fkIKEnums = "\"fk:ik:\"" ;

string $constrainAttrName = "Constraint" ;
string $constrainAttrMin = 0 ;
string $constrainAttrMax = 1 ;

string $ctlAttForFKIKSwitch = ($ikFkSwitchCtl + "." + $fkIKAttrName) ;
string $ctlAttForFKIKSwitchQ = ("\"" + $ikFkSwitchCtl + "." + $fkIKAttrName + "\"") ;
string $ctlAttForConstrain = ($ikFkSwitchCtl + "." + $constrainAttrName) ;






string $ikJoint1 = "L_shoulder" ;
string $ikJoint2 = "L_elbow" ;
string $ikJoint3 = "L_wrist" ;

string $ctlGroupForParenting1 = ($ikJoint1 + "_ctl_group") ;
string $ctlGroupForParenting2 = ($ikJoint2 + "_ctl_group") ;
string $ctlGroupForParenting3 = ($ikJoint3 + "_ctl_group") ;


string $ikLocBaseName = "L_" ;
string $ikLocName1 = ($ikLocBaseName + "ik_loc_1") ;
string $ikLocName2 = ($ikLocBaseName + "ik_loc_2") ;
string $ikLocName3 = ($ikLocBaseName + "ik_loc_3") ;
string $ikLocName4 = ($ikLocBaseName + "ik_loc_4") ;


vector $ikJointTarget1 =`xform -q -ws -t $ikJoint1`;
vector $ikJointTarget2 =`xform -q -ws -t $ikJoint2`;
vector $ikJointTarget3 =`xform -q -ws -t $ikJoint3`;












string $SwitchExpLine = ( "int " + ($fkIKExpVarName) + " = `scriptJob -attributeChange " + $ctlAttForFKIKSwitchQ + " " + $fkIKNodeFuncQ + "`;") ; 

string $SwitchNodeLine = ( " " );
 

string $FKIKAttExeLine1 = ("addAttr -ln " + $fkIKAttrName + "-at enum -en " + $fkIKEnums + "  |" + $groupForFKIKSwitch + "|" + $ikFkSwitchCtl + ";");
string $FKIKAttExeLine2 = ("setAttr -e-keyable true |" + $groupForFKIKSwitch + "|" + $ctlAttForFKIKSwitch + ";");

string $FKIKAttExeLine3 = ("addAttr -ln " + $constrainAttrName + "-at long  -min " + $constrainAttrMin + " -max " + $constrainAttrMax + " -dv 0 |" + $groupForFKIKSwitch + "|" + $ikFkSwitchCtl + ";");
string $FKIKAttExeLine4 = ("setAttr -e-keyable true |" + $groupForFKIKSwitch + "|" + $ctlAttForConstrain + ";");















select -r $ikFkSwitchCtl ;
eval $FKIKAttExeLine1 ;
eval $FKIKAttExeLine2 ;
eval $FKIKAttExeLine3 ;
eval $FKIKAttExeLine4 ;

select -cl ;

string $keyOffUnNess1 = ("setAttr -k off |" + $groupForFKIKSwitch + "|" + $ikFkSwitchCtl + ".rotateX;");
string $keyOffUnNess2 = ("setAttr -k off |" + $groupForFKIKSwitch + "|" + $ikFkSwitchCtl + ".rotateY;");
string $keyOffUnNess3 = ("setAttr -k off |" + $groupForFKIKSwitch + "|" + $ikFkSwitchCtl + ".rotateZ;");
string $keyOffUnNess4 = ("setAttr -k off |" + $groupForFKIKSwitch + "|" + $ikFkSwitchCtl + ".scaleX;");
string $keyOffUnNess5 = ("setAttr -k off |" + $groupForFKIKSwitch + "|" + $ikFkSwitchCtl + ".scaleY;");
string $keyOffUnNess6 = ("setAttr -k off |" + $groupForFKIKSwitch + "|" + $ikFkSwitchCtl + ".scaleZ;");
string $keyOffUnNess7 = ("setAttr -k off |" + $groupForFKIKSwitch + "|" + $ikFkSwitchCtl + ".translateX;");
string $keyOffUnNess8 = ("setAttr -k off |" + $groupForFKIKSwitch + "|" + $ikFkSwitchCtl + ".translateY;");
string $keyOffUnNess9 = ("setAttr -k off |" + $groupForFKIKSwitch + "|" + $ikFkSwitchCtl + ".translateZ;");

eval $keyOffUnNess1 ;
eval $keyOffUnNess2 ;
eval $keyOffUnNess3 ;
eval $keyOffUnNess4 ;
eval $keyOffUnNess5 ;
eval $keyOffUnNess6 ;
eval $keyOffUnNess7 ;
eval $keyOffUnNess8 ;
eval $keyOffUnNess9 ;












CreateLocator;

rename "locator1" $ikLocName1 ;


setAttr ( $ikLocName1 + ".translateX" ) ($ikJointTarget1.x);
setAttr ( $ikLocName1 + ".translateY" ) ($ikJointTarget1.y);
setAttr ( $ikLocName1 + ".translateZ" ) ($ikJointTarget1.z);

select -r $ikLocName1 ;
FreezeTransformations;
select -cl;




CreateLocator;

rename "locator1" $ikLocName2 ;

setAttr ( $ikLocName2 + ".translateX" ) ($ikJointTarget2.x);
setAttr ( $ikLocName2 + ".translateY" ) ($ikJointTarget2.y);
setAttr ( $ikLocName2 + ".translateZ" ) ($ikJointTarget2.z);

select -r $ikLocName2 ;
FreezeTransformations;
select -cl;




CreateLocator;

rename "locator1" $ikLocName3 ;

setAttr ( $ikLocName3 + ".translateX" ) ($ikJointTarget3.x);
setAttr ( $ikLocName3 + ".translateY" ) ($ikJointTarget3.y);
setAttr ( $ikLocName3 + ".translateZ" ) ($ikJointTarget3.z);

select -r $ikLocName3 ;
FreezeTransformations;
select -cl;




CreateLocator;

rename "locator1" $ikLocName4 ;

setAttr ( $ikLocName4 + ".translateX" ) ($ikJointTarget3.x);
setAttr ( $ikLocName4 + ".translateY" ) ($ikJointTarget3.y);
setAttr ( $ikLocName4 + ".translateZ" ) ($ikJointTarget3.z);

select -r $ikLocName4 ;
FreezeTransformations;
select -cl;





select -r $ikLocName1 ;
parent $ikLocName1 $ctlGroupForParenting1 ;
select -cl;

select -r $ikLocName2 ;
parent $ikLocName2 $ctlGroupForParenting2 ;
select -cl;

select -r $ikLocName3 ;
parent $ikLocName3 $ctlGroupForParenting3 ;
select -cl;

select -r $ikLocName4 ;
parent $ikLocName4 $switchingIKHandleGroup ;
select -cl;




select -r $ikJoint1 ;
select -tgl $ikLocName1 ;
doCreateParentConstraintArgList 1 { "1","0","0","0","0","0","0","1","","1" };
parentConstraint -mo -weight 1;

select -cl;



select -r $ikJoint2 ;
select -tgl $ikLocName2 ;
doCreateParentConstraintArgList 1 { "1","0","0","0","0","0","0","1","","1" };
parentConstraint -mo -weight 1;

select -cl;



select -r $ikJoint3 ;
select -tgl $ikLocName3 ;
doCreateParentConstraintArgList 1 { "1","0","0","0","0","0","0","1","","1" };
parentConstraint -mo -weight 1;

select -cl;

select -r $ikJoint3 ;
select -tgl $ikLocName4 ;
doCreateParentConstraintArgList 1 { "1","0","0","0","0","0","0","1","","1" };
parentConstraint -mo -weight 1;

select -cl;






setAttr "L_shoulder_orientConstraint1.L_shoulder_locator_1W0" 0;




expression -s ($SwitchExpLine)  -o "" -n ($fkIKExpName) -ae 1 -uc all ;






scriptNode  -beforeScript  "global proc L_FK_IK_Switch_Node()\n{\n\tint $switchDetect = `getAttr L_hand_ctl.FK_IK_Switch `;\n\n\tif ($switchDetect == 0)\n\t\t{\n\t\t\tprint (\"fk is on\");\n\t\t}\n\tif ($switchDetect == 0)\n\t\t{\n\t\t\tprint (\"ik is on\");\n\t\t}\n}" -n L_FK_IK_Switch_Node;
EEnodeAdded L_FK_IK_Switch_Node;

















